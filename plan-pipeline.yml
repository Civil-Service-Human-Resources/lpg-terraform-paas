trigger:
- idt-feature-*
    
parameters:
  - name: environments
    type: object
    default:
      - integration
      - staging
      - perf
      - production

  - name: people
    type: object
    default:
      - {"name": "Savvas", "age": 36}
      - {"name": "Alice", "age": 40}

variables:
  - group: Terraform variables
  - name: KV_OID
    value: $[variables.KEYVAULT_USERS_GROUP_OBJECTID]

pool:
  vmImage: ubuntu-latest
  

steps:
  - ${{ each PERSON in parameters.people }}:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo {{ PERSON.name }}
          echo {{ PERSON.age }}

  # - task: TerraformInstaller@0
  #   displayName: Install Terraform
  #   inputs:
  #     terraformVersion: 0.13.5

  # - task: AzureCLI@2
  #   displayName: Log in to Azure
  #   inputs:
  #     azureSubscription: 'PrincipalConnectionProduction'
  #     scriptType: 'bash'
  #     scriptLocation: 'inlineScript'
  #     inlineScript: |
  #       az account list
  #     addSpnToEnvironment: true
  #     useGlobalConfig: true

  # - task: Bash@3
  #   displayName: Create plan-files directory
  #   inputs:
  #     targetType: 'inline'
  #     script: |
  #       mkdir plan-files

  # - ${{ each ENV in parameters.environments }}:
  #   - task: Bash@3
  #     displayName: ${{ ENV }} - Copy necessary files from  environment
  #     inputs:
  #       targetType: 'inline'
  #       script: |
  #         cd environments/master
  #         rm -rf .terraform
  #         rm -rf state.tf
  #         rm -rf vars.tf
  #         rm -rf docker-tags-vars.tf
  #         cp -r ../${{ ENV }}/docker-tags-vars.tf .
  #         cp -r ../${{ ENV }}/state.tf .
  #         cp -r ../${{ ENV }}/vars.tf vars.tf
    
  #   - task: TerraformTaskV3@3
  #     displayName: ${{ ENV }} -  Run Terraform init
  #     inputs:
  #       provider: 'azurerm'
  #       command: 'init'
  #       workingDirectory: '$(System.DefaultWorkingDirectory)/environments/master'
  #       backendServiceArm: 'PrincipalConnectionProduction'
  #       backendAzureRmResourceGroupName: 'lpgterraform'
  #       backendAzureRmStorageAccountName: 'lpgterraformsecure'
  #       backendAzureRmContainerName: 'tfstatesecure'
  #       backendAzureRmKey: '00-integration.terraform.tfstate'

  #   - task: TerraformTaskV3@3
  #     displayName: ${{ ENV }} - Run Terraform plan
  #     inputs:
  #       provider: 'azurerm'
  #       command: 'plan'
  #       workingDirectory: '$(System.DefaultWorkingDirectory)/environments/master'
  #       environmentServiceNameAzureRM: 'PrincipalConnectionProduction'
  #       commandOptions: '-var keyvault_users_group_object_id=$(KV_OID) -out tfplan-${{ ENV }}'

  #   - task: Bash@3
  #     displayName: Move plan file to plan-files
  #     inputs:
  #       targetType: 'inline'
  #       script: 'mv $(System.DefaultWorkingDirectory)/environments/master/tfplan-${{ ENV }} $(System.DefaultWorkingDirectory)/plan-files'
  #       workingDirectory: '$(System.DefaultWorkingDirectory)'

  # - task: Bash@3
  #   inputs:
  #     targetType: 'inline'
  #     script: 'ls'
  #     workingDirectory: '$(System.DefaultWorkingDirectory)/plan-files'
      
  # - task: PublishPipelineArtifact@1
  #   displayName: Publish plan files as artifacts
  #   inputs:
  #     targetPath: $(System.DefaultWorkingDirectory)/plan-files
  #     artifactName: CSLPlanFiles
    